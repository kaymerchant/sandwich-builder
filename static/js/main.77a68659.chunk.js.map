{"version":3,"sources":["Components/Modal/Modal.module.css","Components/SandwichIngredients/SandwichIngredients.module.css","Components/AddOn/AddOn.module.css","Components/BuildControls/BuildControls.module.css","MainStyleSheet.module.css","Components/NavBar/NavBar.module.css","Components/Sandwich/Sandwich.module.css","assets/fries.png","assets/soda.png","assets/cookie.png","assets/chips.png","assets/sandwich.png","Containers/SandwichBuilder/SandwichBuilder.module.css","Components/BuildControls/BuildControls.js","Components/SandwichIngredients/SandwichIngredients.js","Components/Sandwich/Sandwich.js","Components/AddOn/AddOn.js","Components/Modal/Modal.js","Components/NavBar/NavBar.js","Containers/SandwichBuilder/SandwichBuilder.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","buildControls","props","controlPanel","Object","keys","ingredients","map","igKey","key","className","classes","Label","toUpperCase","Button","onClick","addIndgredients","reduceIndgredients","mainclasses","OverallStyle","MainClass","totalAmount","toFixed","sandwichIngredients","ingredientsToAdd","BreadTop","BreadBottom","Cheese","Meat","Salad","Tomato","sandwich","count","transformedIndgredients","Array","_","i","SandwichIngredients","Text","addOnCategory","fries","soda","cookie","chips","addOnValue","addOn","addOnDisplay","index","item","AddOn","AddOnImage","src","alt","addAddOn","disabled","addOns","price","removeAddOn","totalPrice","finalPrice","sandwichPrice","addOnPrice","OrderNow","showsModal","alert","modal","listOfIngredients","toDisplay","counter","listOfAddOn","Modal","Close","closeModal","Title","navBar","Logo","showModal","SandwichBuilder","state","cheese","meat","salad","tomato","ingredientsPrice","modalStatus","ingredientsAddHandler","type","updatedCount","indgredientsToUpdate","setState","updatedPrice","ingredientsRemoveHandler","actaulCount","addAddOnHandler","priceOfAddOn","updatedAddOnPrice","disabledStatus","removeAddOnHandler","priceToDelete","displayModalHandler","closeModalhandler","document","title","Main","NavBar","this","Sandwich","BuildControls","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.77a68659.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainClass\":\"Modal_MainClass__2F0h1\",\"Modal\":\"Modal_Modal__2SCQO\",\"Close\":\"Modal_Close__g_kaV\",\"Title\":\"Modal_Title__27u92\",\"Button\":\"Modal_Button__3OteQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"SandwichIngredients_BreadBottom__1jD3e\",\"BreadTop\":\"SandwichIngredients_BreadTop__1xRSJ\",\"Cheese\":\"SandwichIngredients_Cheese__1liZK\",\"Salad\":\"SandwichIngredients_Salad__Rmodl\",\"Meat\":\"SandwichIngredients_Meat__5RVHT\",\"Tomato\":\"SandwichIngredients_Tomato__1dZlQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Title\":\"AddOn_Title__3bZZA\",\"AddOn\":\"AddOn_AddOn__3HOb1\",\"AddOnImage\":\"AddOn_AddOnImage__1_phQ\",\"Button\":\"AddOn_Button__2JJVX\",\"OrderNow\":\"AddOn_OrderNow__35S51\",\"Modal\":\"AddOn_Modal__3_lQ5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainClass\":\"BuildControls_MainClass__vu7L1\",\"Label\":\"BuildControls_Label__5U4jw\",\"Button\":\"BuildControls_Button__lyOUH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"OverallStyle\":\"MainStyleSheet_OverallStyle__kZnCM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainClass\":\"NavBar_MainClass__2wqBM\",\"Logo\":\"NavBar_Logo__1Cyzi\",\"Button\":\"NavBar_Button__3d3Uu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainClass\":\"Sandwich_MainClass__2aV1W\",\"Text\":\"Sandwich_Text__2redX\"};","module.exports = __webpack_public_path__ + \"static/media/fries.b3face1c.png\";","module.exports = __webpack_public_path__ + \"static/media/soda.de9d5106.png\";","module.exports = __webpack_public_path__ + \"static/media/cookie.6b0a64a3.png\";","module.exports = __webpack_public_path__ + \"static/media/chips.d582e1d7.png\";","module.exports = __webpack_public_path__ + \"static/media/sandwich.d74b57a0.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"SandwichBuilder_Main__2l8n4\"};","import React from 'react'\r\nimport classes from './BuildControls.module.css'\r\nimport mainclasses from '../../MainStyleSheet.module.css'\r\n\r\nconst buildControls = (props) => {\r\n    let controlPanel = Object.keys(props.ingredients).map(igKey => {\r\n        return (\r\n                <div key={igKey}>\r\n                <div className={classes.Label}>{igKey.toUpperCase()}</div>\r\n                <button className={classes.Button} onClick={() => props.addIndgredients(igKey)}>MORE</button>\r\n                <button className={classes.Button} onClick={() => props.reduceIndgredients(igKey)}>LESS</button>\r\n                </div>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div className={mainclasses.OverallStyle}>\r\n        <div className={classes.MainClass}>\r\n            <p>Sandwich Costs ${props.totalAmount.toFixed(2)}</p>\r\n            {controlPanel}\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default buildControls","import React from 'react'\r\nimport classes from './SandwichIngredients.module.css'\r\n\r\nconst sandwichIngredients = (props) => {\r\n    let ingredientsToAdd = null\r\n\r\n        switch(props.ingredients) {\r\n            case ('breadTop'):\r\n                ingredientsToAdd = <div className={classes.BreadTop}></div>\r\n                break;\r\n            case ('breadBottom'):\r\n                ingredientsToAdd = <div className={classes.BreadBottom}></div>\r\n                break;\r\n            case ('cheese'):\r\n                ingredientsToAdd = <div className={classes.Cheese}></div>\r\n                break;\r\n            case ('meat'):\r\n                ingredientsToAdd = <div className={classes.Meat}></div>\r\n                break;  \r\n            case ('salad'):\r\n                ingredientsToAdd = <div className={classes.Salad}></div>\r\n                break;\r\n            case ('tomato'):\r\n                ingredientsToAdd = <div className={classes.Tomato}></div>\r\n                break;\r\n            default:\r\n                ingredientsToAdd = null;\r\n                break;\r\n    }\r\n    return(\r\n        ingredientsToAdd\r\n    )\r\n    }\r\n    \r\n\r\nexport default sandwichIngredients","import React from 'react'\r\nimport SandwichIngredients from '../SandwichIngredients/SandwichIngredients' \r\nimport classes from './Sandwich.module.css'\r\nimport mainclasses from '../../MainStyleSheet.module.css'\r\n\r\nconst sandwich = (props) => {\r\n    let count = 0;\r\n\r\n    let transformedIndgredients = Object.keys(props.ingredients).map(igKey => {\r\n        count += props.ingredients[igKey]\r\n        return [...Array(props.ingredients[igKey])].map(\r\n            ((_, i) => {\r\n                return <SandwichIngredients key={igKey+i} ingredients={igKey}/>\r\n            }\r\n        ))\r\n    })\r\n\r\n    if(count === 0) {\r\n        transformedIndgredients = <p className={classes.Text}>Add some ingredients</p>\r\n    }\r\n    return (\r\n        <div className={mainclasses.OverallStyle}>\r\n        <div className={classes.MainClass}>\r\n            <SandwichIngredients ingredients={\"breadTop\"}/>\r\n            {transformedIndgredients}\r\n            <SandwichIngredients ingredients={\"breadBottom\"}/>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default sandwich","import React from 'react'\r\nimport fries from '../../assets/fries.png'\r\nimport soda from '../../assets/soda.png'\r\nimport cookie from '../../assets/cookie.png'\r\nimport chips from '../../assets/chips.png'\r\nimport classes from './AddOn.module.css'\r\n\r\nlet addOnCategory = [fries, soda, cookie,chips]\r\n\r\nlet addOnValue = [\"fries\", \"soda\", \"cookie\", \"chips\"]\r\n\r\nconst addOn = (props) => {\r\n    let addOnDisplay = addOnCategory.map((addOn, index) => {\r\n        let item = addOnValue[index]\r\n        return(\r\n            <div key={item} className={classes.AddOn}>\r\n             <img className={classes.AddOnImage} src={addOn} alt={item}></img>\r\n             <button className={classes.Button}\r\n             onClick={() => props.addAddOn(item)} \r\n             disabled={props.addOns[item].disabled}>Add @ {props.addOns[item].price.toFixed(2)}</button>\r\n             <button className={classes.Button}\r\n             onClick={() => props.removeAddOn(item)}\r\n             disabled={!props.addOns[item].disabled}>Remove</button>\r\n            </div>\r\n        )\r\n    })\r\n \r\n    let totalPrice = props.finalPrice.sandwichPrice + props.finalPrice.addOnPrice\r\n \r\n    let totalAmount = () => {\r\n        if(props.finalPrice.sandwichPrice === 2 && props.finalPrice.addOnPrice > 0) {\r\n            alert(\"Build your sandwich, addOn has been added\")\r\n           \r\n        }\r\n        else if(props.finalPrice.sandwichPrice === 2) {\r\n            return \" \"\r\n        }\r\n        else {\r\n            return \"@ \" + totalPrice.toFixed(2)\r\n        }\r\n    }\r\n\r\n    \r\n    return ( \r\n        <div>\r\n            {addOnDisplay}\r\n            <button  className={classes.OrderNow} \r\n            onClick={props.showsModal}\r\n            >ORDER NOW {totalAmount()}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default addOn","import React from 'react'\r\nimport classes from './Modal.module.css'\r\n\r\nlet addOns = [\"Fries\", \"Soda\", \"Cookie\", \"Chip\"]\r\nconst modal = (props) => {\r\n\r\n    const listOfIngredients = Object.keys(props.toDisplay.ingredients).map(igKey =>{\r\n        return (\r\n            <li key={igKey}>{igKey.toUpperCase()} : {props.toDisplay.ingredients[igKey]}</li>\r\n        )\r\n    })\r\n\r\n    let counter = 0;\r\n    const listOfAddOn = Object.keys(props.toDisplay.addOn).map((igKey, index) => {\r\n        if(props.toDisplay.addOn[igKey].disabled === true) {\r\n            counter++;\r\n                return <li key={index}>{addOns[index]}</li>\r\n        }\r\n    })\r\n\r\n    let placeOrder = () => {\r\n        alert(\"Order has been placed sucessfully\");\r\n    }\r\n    return (\r\n        <div className={classes.MainClass}>\r\n            <div className={classes.Modal}>\r\n                <div className={classes.Close} onClick={props.closeModal}>Close</div>\r\n                <div className={classes.Title}>ORDER SUMMARY</div>\r\n                {listOfIngredients}\r\n                {\"AddOns : \"}\r\n                {counter === 0? \"None\" : listOfAddOn}<br/>\r\n                <button className={classes.Button} onClick={placeOrder}>Place Order</button>\r\n                <button className={classes.Button} onClick={props.closeModal}>Cancel</button>\r\n                <div className={classes.Title}>ENJOY YOU MEAL</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default modal","import React from 'react'\r\nimport sandwich from '../../assets/sandwich.png'\r\nimport classes from './NavBar.module.css'\r\n\r\nconst navBar = (props) => {\r\n    return (\r\n        <div className={classes.MainClass}>\r\n            <img className={classes.Logo} src={sandwich} alt={\"Sandwich\"}></img>\r\n            <div className={classes.Button} onClick={props.showModal}>Order Now</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default navBar","import React, { Component } from 'react'\r\nimport BuildControls from '../../Components/BuildControls/BuildControls'\r\nimport Sandwich from '../../Components/Sandwich/Sandwich'\r\nimport AddOn from '../../Components/AddOn/AddOn'\r\nimport Modal from '../../Components/Modal/Modal'\r\nimport NavBar from '../../Components/NavBar/NavBar'\r\nimport classes from './SandwichBuilder.module.css'\r\n\r\nclass SandwichBuilder extends Component {\r\n    state = {\r\n        ingredients : {\r\n            cheese : 0,\r\n            meat : 0,\r\n            salad : 0,\r\n            tomato : 0\r\n        },\r\n        ingredientsPrice : {\r\n            cheese: 0.75,\r\n            meat : 1.00,\r\n            salad : 0.50,\r\n            tomato : 0.25\r\n        },\r\n        addOn : {\r\n            fries : {\r\n                price : 2.50,\r\n                disabled : false\r\n            },\r\n            soda : {\r\n                price : 1.50,\r\n                disabled : false\r\n            },\r\n            cookie : {\r\n                price : 2.00,\r\n                disabled : false\r\n            },\r\n            chips : {\r\n                price : 2.00,\r\n                disabled : false\r\n            }\r\n        },\r\n        sandwichPrice : 2.00,\r\n        addOnPrice : 0.00,\r\n        modalStatus : false\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"Sandwich Express\"\r\n      }\r\n\r\n    ingredientsAddHandler = (type) => {\r\n        let updatedCount = this.state.ingredients[type] + 1;\r\n        let indgredientsToUpdate = {...this.state.ingredients}\r\n        indgredientsToUpdate[type] = updatedCount\r\n        this.setState({ingredients : indgredientsToUpdate})\r\n\r\n        let originalPrice = this.state.sandwichPrice\r\n        let updatedPrice = originalPrice + this.state.ingredientsPrice[type]\r\n        this.setState({sandwichPrice : updatedPrice})\r\n    }\r\n\r\n    ingredientsRemoveHandler = (type) => {\r\n        let actaulCount = this.state.ingredients[type];\r\n        if(actaulCount === 0) {\r\n            return\r\n        }\r\n        let updatedCount = actaulCount - 1;\r\n     \r\n        let indgredientsToUpdate = {...this.state.ingredients}\r\n        indgredientsToUpdate[type] = updatedCount\r\n        this.setState({ingredients : indgredientsToUpdate})\r\n      \r\n\r\n        let originalPrice = this.state.sandwichPrice\r\n        let updatedPrice = originalPrice - this.state.ingredientsPrice[type]\r\n        this.setState({sandwichPrice : updatedPrice})\r\n    }\r\n\r\n    addAddOnHandler = (type) => {\r\n        let priceOfAddOn = this.state.addOn[type].price\r\n        let updatedAddOnPrice = this.state.addOnPrice + priceOfAddOn\r\n        let disabledStatus ={...this.state.addOn}\r\n        disabledStatus[type].disabled = true\r\n        this.setState({addOn : disabledStatus})\r\n        this.setState({addOnPrice : updatedAddOnPrice})\r\n    }\r\n\r\n    removeAddOnHandler = (type) => {\r\n        let priceToDelete = this.state.addOn[type].price\r\n        let updatedAddOnPrice = this.state.addOnPrice - priceToDelete\r\n        let disabledStatus ={...this.state.addOn}\r\n        disabledStatus[type].disabled = false\r\n        this.setState({addOn : disabledStatus})\r\n        this.setState({addOnPrice : updatedAddOnPrice})\r\n\r\n    }\r\n\r\n    displayModalHandler = () => {\r\n      \r\n        this.setState({modalStatus:true})\r\n    }\r\n\r\n    closeModalhandler = () => {\r\n       \r\n        this.setState({modalStatus:false})\r\n    }\r\n    render () { \r\n        return (\r\n            <div>\r\n                <div className={classes.Main}>Express Sandwich</div>\r\n            <NavBar showModal = {this.displayModalHandler}/>\r\n            <Sandwich ingredients={this.state.ingredients}/>\r\n            <BuildControls ingredients={this.state.ingredients}\r\n            addIndgredients={this.ingredientsAddHandler}\r\n            reduceIndgredients={this.ingredientsRemoveHandler}\r\n            totalAmount={this.state.sandwichPrice}/>\r\n            <AddOn addOns={this.state.addOn}\r\n            addAddOn={this.addAddOnHandler}\r\n            removeAddOn={this.removeAddOnHandler}\r\n            finalPrice = {this.state}\r\n            showsModal = {this.displayModalHandler}/>\r\n            {this.state.modalStatus ?\r\n            <Modal toDisplay={this.state}\r\n            closeModal={this.closeModalhandler}/> : null}\r\n        </div>\r\n        ) \r\n    }\r\n}\r\n\r\nexport default SandwichBuilder","import React from 'react';\nimport SandwichBuilder from '../src/Containers/SandwichBuilder/SandwichBuilder'\n\n\nfunction App() {\n\n\n  return (\n    <div>\n      <SandwichBuilder/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}